server {
  listen 443 ssl;
  http2 on;

  server_name devsters.ru;
  ssl_certificate /etc/letsencrypt/live/devsters.ru/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/devsters.ru/privkey.pem;

  root /usr/share/nginx/html;
  index index.html;
  client_max_body_size 100G;
  gzip on;
  gzip_types text/css application/javascript;
  gzip_min_length 1000;

  # Настройки CSP (адаптируйте под свои нужды)
  # add_header Content-Security-Policy "upgrade-insecure-requests '0';";
  # Другие security headers
  add_header Content-Security-Policy "default-src 'self';img-src 'self' data:; media-src 'self' blob:; font-src 'self' fonts.gstatic.com; style-src 'self' fonts.googleapis.com; frame-ancestors 'self'; child-src 'self'; script-src 'self' 'unsafe-inline';";
  add_header X-Content-Type-Options "nosniff";
#   add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy "strict-origin-when-cross-origin";
  include /etc/nginx/mime.types;

  location / {
    default_type application/octet-stream;
    try_files $uri $uri/ /index.html;
  }

#   location ~ ^/(|upload|profile|my-videos|edit-video(?:/[^/]+)?|video(?:/[^/]+)?)$ {
#       default_type application/octet-stream;
#       try_files $uri $uri/ /index.html;
#   }

  location = /*.svg {
      log_not_found off;
      access_log off;
  }

  location /api/ {
    proxy_pass http://video:8555/api/;
    proxy_set_header Host $http_host;
  }

  location /keycloak/realms/ {
    proxy_pass http://keycloak:8080/realms/;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Forwarded-For $proxy_protocol_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
  }
    
  location /keycloak/resources/ {
    proxy_pass http://keycloak:8080/resources/;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Forwarded-For $proxy_protocol_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
  }

  # Разрешаем OpenID Connect Discovery (необязательно, но полезно)
#   location = /keycloak/realms/master/.well-known/openid-configuration {
#     proxy_pass http://keycloak:8080/realms/master/.well-known/openid-configuration;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header Host $host;
#   }
#   location /keycloak/ {
#     proxy_pass http://keycloak:8080/;
# #     proxy_redirect / /keycloak;

#     proxy_set_header X-Original-URI $request_uri;
#     proxy_set_header X-Forwarded-For $proxy_protocol_addr;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header X-Forwarded-Host $host;
#   }

  location /video-storage/ {
    default_type application/octet-stream;
    proxy_pass http://minio:9000/videos-bucket/;
    proxy_set_header Host minio:9000;
  }
  location /image-storage/ {
    default_type application/octet-stream;
    proxy_pass http://minio:9000/images-bucket/;
    proxy_set_header Host minio:9000;
  }
  location /source/ {
    proxy_pass http://minio:9000/source/;
    proxy_set_header Host $host;
  }

  location ~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }
  # Блокируем доступ к скрытым файлам
  location ~ /\.(?!well-known).* {
    deny all;
  }

  error_page 404 /index.html;
}

server{
  listen 80;
  server_name devsters.ru;

  location ~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  return 301 https://$host$request_uri;
}

#server{
#    listen 80;
#    server_name test.devsters.ru;
#
#   location ~ /\.(?!well-known).* {
#  deny all;
#    }

#    location /grafana/ {
 #       proxy_pass http://grafana:3000/;
        #proxy_set_header Host $host;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Для WebSocket
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection "Upgrade";

 #   }

#   location /minio/ {
#       proxy_pass http://minio:9001/;
#   }
#}